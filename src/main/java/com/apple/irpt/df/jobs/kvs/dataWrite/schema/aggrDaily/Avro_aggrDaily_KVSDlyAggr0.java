
/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.apple.irpt.df.jobs.kvs.dataWrite.schema.aggrDaily;  
@SuppressWarnings("all")
/** Avro storing with schema using Pig. */
@org.apache.avro.specific.AvroGenerated
public class Avro_aggrDaily_KVSDlyAggr0 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Avro_aggrDaily_KVSDlyAggr0\",\"namespace\":\"com.apple.irpt.df.jobs.kvs.dataWrite.schema.aggrDaily\",\"doc\":\"Avro storing with schema using Pig.\",\"fields\":[{\"name\":\"LATEST_USED_STORAGE_SIZE_DLY\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"AGGR_COUNT_DLY\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"PRS_ID\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"UD_ID\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"EVENT_TYPE\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"PLATFORM\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"OS_VERSION\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"APPLICATION\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"BUNDLE_ID\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"KV_ID\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"SERVER_ERROR\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"SERVICE_TYPE\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"EVENT_DATE_1\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"EVENT_DATE_2\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"EVENT_TIME_EPOCH\",\"type\":[\"null\",\"long\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public Long LATEST_USED_STORAGE_SIZE_DLY;
  @Deprecated public Long AGGR_COUNT_DLY;
  @Deprecated public Long PRS_ID;
  @Deprecated public CharSequence UD_ID;
  @Deprecated public CharSequence EVENT_TYPE;
  @Deprecated public CharSequence PLATFORM;
  @Deprecated public CharSequence OS_VERSION;
  @Deprecated public CharSequence APPLICATION;
  @Deprecated public CharSequence BUNDLE_ID;
  @Deprecated public CharSequence KV_ID;
  @Deprecated public CharSequence SERVER_ERROR;
  @Deprecated public CharSequence SERVICE_TYPE;
  @Deprecated public CharSequence EVENT_DATE_1;
  @Deprecated public CharSequence EVENT_DATE_2;
  @Deprecated public Long EVENT_TIME_EPOCH;

  /**
   * Default constructor.
   */
  public Avro_aggrDaily_KVSDlyAggr0() {}

  /**
   * All-args constructor.
   */
  public Avro_aggrDaily_KVSDlyAggr0(Long LATEST_USED_STORAGE_SIZE_DLY, Long AGGR_COUNT_DLY, Long PRS_ID, CharSequence UD_ID, CharSequence EVENT_TYPE, CharSequence PLATFORM, CharSequence OS_VERSION, CharSequence APPLICATION, CharSequence BUNDLE_ID, CharSequence KV_ID, CharSequence SERVER_ERROR, CharSequence SERVICE_TYPE, CharSequence EVENT_DATE_1, CharSequence EVENT_DATE_2, Long EVENT_TIME_EPOCH) {
    this.LATEST_USED_STORAGE_SIZE_DLY = LATEST_USED_STORAGE_SIZE_DLY;
    this.AGGR_COUNT_DLY = AGGR_COUNT_DLY;
    this.PRS_ID = PRS_ID;
    this.UD_ID = UD_ID;
    this.EVENT_TYPE = EVENT_TYPE;
    this.PLATFORM = PLATFORM;
    this.OS_VERSION = OS_VERSION;
    this.APPLICATION = APPLICATION;
    this.BUNDLE_ID = BUNDLE_ID;
    this.KV_ID = KV_ID;
    this.SERVER_ERROR = SERVER_ERROR;
    this.SERVICE_TYPE = SERVICE_TYPE;
    this.EVENT_DATE_1 = EVENT_DATE_1;
    this.EVENT_DATE_2 = EVENT_DATE_2;
    this.EVENT_TIME_EPOCH = EVENT_TIME_EPOCH;
  }

  public String toStringText(){
  	return LATEST_USED_STORAGE_SIZE_DLY+"	"+AGGR_COUNT_DLY+"	"+PRS_ID+"	"+UD_ID+"	"+EVENT_TYPE+"	"+PLATFORM+"	"+OS_VERSION+"	"+APPLICATION+"	"+BUNDLE_ID+"	"+KV_ID+"	"+SERVER_ERROR+"	"+SERVICE_TYPE+"	"+EVENT_DATE_1+"	"+EVENT_DATE_2+"	"+EVENT_TIME_EPOCH;
  	
  }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public Object get(int field$) {
    switch (field$) {
    case 0: return LATEST_USED_STORAGE_SIZE_DLY;
    case 1: return AGGR_COUNT_DLY;
    case 2: return PRS_ID;
    case 3: return UD_ID;
    case 4: return EVENT_TYPE;
    case 5: return PLATFORM;
    case 6: return OS_VERSION;
    case 7: return APPLICATION;
    case 8: return BUNDLE_ID;
    case 9: return KV_ID;
    case 10: return SERVER_ERROR;
    case 11: return SERVICE_TYPE;
    case 12: return EVENT_DATE_1;
    case 13: return EVENT_DATE_2;
    case 14: return EVENT_TIME_EPOCH;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: LATEST_USED_STORAGE_SIZE_DLY = (Long)value$; break;
    case 1: AGGR_COUNT_DLY = (Long)value$; break;
    case 2: PRS_ID = (Long)value$; break;
    case 3: UD_ID = (CharSequence)value$; break;
    case 4: EVENT_TYPE = (CharSequence)value$; break;
    case 5: PLATFORM = (CharSequence)value$; break;
    case 6: OS_VERSION = (CharSequence)value$; break;
    case 7: APPLICATION = (CharSequence)value$; break;
    case 8: BUNDLE_ID = (CharSequence)value$; break;
    case 9: KV_ID = (CharSequence)value$; break;
    case 10: SERVER_ERROR = (CharSequence)value$; break;
    case 11: SERVICE_TYPE = (CharSequence)value$; break;
    case 12: EVENT_DATE_1 = (CharSequence)value$; break;
    case 13: EVENT_DATE_2 = (CharSequence)value$; break;
    case 14: EVENT_TIME_EPOCH = (Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'LATEST_USED_STORAGE_SIZE_DLY' field.
   */
  public Long getLATESTUSEDSTORAGESIZEDLY() {
    return LATEST_USED_STORAGE_SIZE_DLY;
  }

  /**
   * Sets the value of the 'LATEST_USED_STORAGE_SIZE_DLY' field.
   * @param value the value to set.
   */
  public void setLATESTUSEDSTORAGESIZEDLY(Long value) {
    this.LATEST_USED_STORAGE_SIZE_DLY = value;
  }

  /**
   * Gets the value of the 'AGGR_COUNT_DLY' field.
   */
  public Long getAGGRCOUNTDLY() {
    return AGGR_COUNT_DLY;
  }

  /**
   * Sets the value of the 'AGGR_COUNT_DLY' field.
   * @param value the value to set.
   */
  public void setAGGRCOUNTDLY(Long value) {
    this.AGGR_COUNT_DLY = value;
  }

  /**
   * Gets the value of the 'PRS_ID' field.
   */
  public Long getPRSID() {
    return PRS_ID;
  }

  /**
   * Sets the value of the 'PRS_ID' field.
   * @param value the value to set.
   */
  public void setPRSID(Long value) {
    this.PRS_ID = value;
  }

  /**
   * Gets the value of the 'UD_ID' field.
   */
  public CharSequence getUDID() {
    return UD_ID;
  }

  /**
   * Sets the value of the 'UD_ID' field.
   * @param value the value to set.
   */
  public void setUDID(CharSequence value) {
    this.UD_ID = value;
  }

  /**
   * Gets the value of the 'EVENT_TYPE' field.
   */
  public CharSequence getEVENTTYPE() {
    return EVENT_TYPE;
  }

  /**
   * Sets the value of the 'EVENT_TYPE' field.
   * @param value the value to set.
   */
  public void setEVENTTYPE(CharSequence value) {
    this.EVENT_TYPE = value;
  }

  /**
   * Gets the value of the 'PLATFORM' field.
   */
  public CharSequence getPLATFORM() {
    return PLATFORM;
  }

  /**
   * Sets the value of the 'PLATFORM' field.
   * @param value the value to set.
   */
  public void setPLATFORM(CharSequence value) {
    this.PLATFORM = value;
  }

  /**
   * Gets the value of the 'OS_VERSION' field.
   */
  public CharSequence getOSVERSION() {
    return OS_VERSION;
  }

  /**
   * Sets the value of the 'OS_VERSION' field.
   * @param value the value to set.
   */
  public void setOSVERSION(CharSequence value) {
    this.OS_VERSION = value;
  }

  /**
   * Gets the value of the 'APPLICATION' field.
   */
  public CharSequence getAPPLICATION() {
    return APPLICATION;
  }

  /**
   * Sets the value of the 'APPLICATION' field.
   * @param value the value to set.
   */
  public void setAPPLICATION(CharSequence value) {
    this.APPLICATION = value;
  }

  /**
   * Gets the value of the 'BUNDLE_ID' field.
   */
  public CharSequence getBUNDLEID() {
    return BUNDLE_ID;
  }

  /**
   * Sets the value of the 'BUNDLE_ID' field.
   * @param value the value to set.
   */
  public void setBUNDLEID(CharSequence value) {
    this.BUNDLE_ID = value;
  }

  /**
   * Gets the value of the 'KV_ID' field.
   */
  public CharSequence getKVID() {
    return KV_ID;
  }

  /**
   * Sets the value of the 'KV_ID' field.
   * @param value the value to set.
   */
  public void setKVID(CharSequence value) {
    this.KV_ID = value;
  }

  /**
   * Gets the value of the 'SERVER_ERROR' field.
   */
  public CharSequence getSERVERERROR() {
    return SERVER_ERROR;
  }

  /**
   * Sets the value of the 'SERVER_ERROR' field.
   * @param value the value to set.
   */
  public void setSERVERERROR(CharSequence value) {
    this.SERVER_ERROR = value;
  }

  /**
   * Gets the value of the 'SERVICE_TYPE' field.
   */
  public CharSequence getSERVICETYPE() {
    return SERVICE_TYPE;
  }

  /**
   * Sets the value of the 'SERVICE_TYPE' field.
   * @param value the value to set.
   */
  public void setSERVICETYPE(CharSequence value) {
    this.SERVICE_TYPE = value;
  }

  /**
   * Gets the value of the 'EVENT_DATE_1' field.
   */
  public CharSequence getEVENTDATE1() {
    return EVENT_DATE_1;
  }

  /**
   * Sets the value of the 'EVENT_DATE_1' field.
   * @param value the value to set.
   */
  public void setEVENTDATE1(CharSequence value) {
    this.EVENT_DATE_1 = value;
  }

  /**
   * Gets the value of the 'EVENT_DATE_2' field.
   */
  public CharSequence getEVENTDATE2() {
    return EVENT_DATE_2;
  }

  /**
   * Sets the value of the 'EVENT_DATE_2' field.
   * @param value the value to set.
   */
  public void setEVENTDATE2(CharSequence value) {
    this.EVENT_DATE_2 = value;
  }

  /**
   * Gets the value of the 'EVENT_TIME_EPOCH' field.
   */
  public Long getEVENTTIMEEPOCH() {
    return EVENT_TIME_EPOCH;
  }

  /**
   * Sets the value of the 'EVENT_TIME_EPOCH' field.
   * @param value the value to set.
   */
  public void setEVENTTIMEEPOCH(Long value) {
    this.EVENT_TIME_EPOCH = value;
  }

  /** Creates a new Avro_aggrDaily_KVSDlyAggr0 RecordBuilder */
  public static Builder newBuilder() {
    return new Builder();
  }
  

  /** Creates a new Avro_aggrDaily_KVSDlyAggr0 RecordBuilder by copying an existing Builder */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }
  

  /** Creates a new Avro_aggrDaily_KVSDlyAggr0 RecordBuilder by copying an existing Avro_aggrDaily_KVSDlyAggr0 instance */
  public static Builder newBuilder(Avro_aggrDaily_KVSDlyAggr0 other) {
    return new Builder(other);
  }
  

  /**
   * RecordBuilder for Avro_aggrDaily_KVSDlyAggr0 instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Avro_aggrDaily_KVSDlyAggr0>
    implements org.apache.avro.data.RecordBuilder<Avro_aggrDaily_KVSDlyAggr0> {

    private Long LATEST_USED_STORAGE_SIZE_DLY;
    private Long AGGR_COUNT_DLY;
    private Long PRS_ID;
    private CharSequence UD_ID;
    private CharSequence EVENT_TYPE;
    private CharSequence PLATFORM;
    private CharSequence OS_VERSION;
    private CharSequence APPLICATION;
    private CharSequence BUNDLE_ID;
    private CharSequence KV_ID;
    private CharSequence SERVER_ERROR;
    private CharSequence SERVICE_TYPE;
    private CharSequence EVENT_DATE_1;
    private CharSequence EVENT_DATE_2;
    private Long EVENT_TIME_EPOCH;

    /** Creates a new Builder */
    private Builder() {
      super(Avro_aggrDaily_KVSDlyAggr0.SCHEMA$);
    }
    

    /** Creates a Builder by copying an existing Builder */
    private Builder(Builder other) {
      super(other);
    }
    

    /** Creates a Builder by copying an existing Avro_aggrDaily_KVSDlyAggr0 instance */
    private Builder(Avro_aggrDaily_KVSDlyAggr0 other) {
            super(Avro_aggrDaily_KVSDlyAggr0.SCHEMA$);
      if (isValidValue(fields()[0], other.LATEST_USED_STORAGE_SIZE_DLY)) {
        this.LATEST_USED_STORAGE_SIZE_DLY = data().deepCopy(fields()[0].schema(), other.LATEST_USED_STORAGE_SIZE_DLY);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.AGGR_COUNT_DLY)) {
        this.AGGR_COUNT_DLY = data().deepCopy(fields()[1].schema(), other.AGGR_COUNT_DLY);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.PRS_ID)) {
        this.PRS_ID = data().deepCopy(fields()[2].schema(), other.PRS_ID);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.UD_ID)) {
        this.UD_ID = data().deepCopy(fields()[3].schema(), other.UD_ID);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.EVENT_TYPE)) {
        this.EVENT_TYPE = data().deepCopy(fields()[4].schema(), other.EVENT_TYPE);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.PLATFORM)) {
        this.PLATFORM = data().deepCopy(fields()[5].schema(), other.PLATFORM);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.OS_VERSION)) {
        this.OS_VERSION = data().deepCopy(fields()[6].schema(), other.OS_VERSION);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.APPLICATION)) {
        this.APPLICATION = data().deepCopy(fields()[7].schema(), other.APPLICATION);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.BUNDLE_ID)) {
        this.BUNDLE_ID = data().deepCopy(fields()[8].schema(), other.BUNDLE_ID);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.KV_ID)) {
        this.KV_ID = data().deepCopy(fields()[9].schema(), other.KV_ID);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.SERVER_ERROR)) {
        this.SERVER_ERROR = data().deepCopy(fields()[10].schema(), other.SERVER_ERROR);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.SERVICE_TYPE)) {
        this.SERVICE_TYPE = data().deepCopy(fields()[11].schema(), other.SERVICE_TYPE);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.EVENT_DATE_1)) {
        this.EVENT_DATE_1 = data().deepCopy(fields()[12].schema(), other.EVENT_DATE_1);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.EVENT_DATE_2)) {
        this.EVENT_DATE_2 = data().deepCopy(fields()[13].schema(), other.EVENT_DATE_2);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.EVENT_TIME_EPOCH)) {
        this.EVENT_TIME_EPOCH = data().deepCopy(fields()[14].schema(), other.EVENT_TIME_EPOCH);
        fieldSetFlags()[14] = true;
      }
    }

    /** Gets the value of the 'LATEST_USED_STORAGE_SIZE_DLY' field */
    public Long getLATESTUSEDSTORAGESIZEDLY() {
      return LATEST_USED_STORAGE_SIZE_DLY;
    }
    

    /** Sets the value of the 'LATEST_USED_STORAGE_SIZE_DLY' field */
    public Builder setLATESTUSEDSTORAGESIZEDLY(Long value) {
      validate(fields()[0], value);
      this.LATEST_USED_STORAGE_SIZE_DLY = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    

    /** Checks whether the 'LATEST_USED_STORAGE_SIZE_DLY' field has been set */
    public boolean hasLATESTUSEDSTORAGESIZEDLY() {
      return fieldSetFlags()[0];
    }
    

    /** Clears the value of the 'LATEST_USED_STORAGE_SIZE_DLY' field */
    public Builder clearLATESTUSEDSTORAGESIZEDLY() {
      LATEST_USED_STORAGE_SIZE_DLY = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'AGGR_COUNT_DLY' field */
    public Long getAGGRCOUNTDLY() {
      return AGGR_COUNT_DLY;
    }
    

    /** Sets the value of the 'AGGR_COUNT_DLY' field */
    public Builder setAGGRCOUNTDLY(Long value) {
      validate(fields()[1], value);
      this.AGGR_COUNT_DLY = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    

    /** Checks whether the 'AGGR_COUNT_DLY' field has been set */
    public boolean hasAGGRCOUNTDLY() {
      return fieldSetFlags()[1];
    }
    

    /** Clears the value of the 'AGGR_COUNT_DLY' field */
    public Builder clearAGGRCOUNTDLY() {
      AGGR_COUNT_DLY = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'PRS_ID' field */
    public Long getPRSID() {
      return PRS_ID;
    }
    

    /** Sets the value of the 'PRS_ID' field */
    public Builder setPRSID(Long value) {
      validate(fields()[2], value);
      this.PRS_ID = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    

    /** Checks whether the 'PRS_ID' field has been set */
    public boolean hasPRSID() {
      return fieldSetFlags()[2];
    }
    

    /** Clears the value of the 'PRS_ID' field */
    public Builder clearPRSID() {
      PRS_ID = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'UD_ID' field */
    public CharSequence getUDID() {
      return UD_ID;
    }
    

    /** Sets the value of the 'UD_ID' field */
    public Builder setUDID(CharSequence value) {
      validate(fields()[3], value);
      this.UD_ID = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    

    /** Checks whether the 'UD_ID' field has been set */
    public boolean hasUDID() {
      return fieldSetFlags()[3];
    }
    

    /** Clears the value of the 'UD_ID' field */
    public Builder clearUDID() {
      UD_ID = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'EVENT_TYPE' field */
    public CharSequence getEVENTTYPE() {
      return EVENT_TYPE;
    }
    

    /** Sets the value of the 'EVENT_TYPE' field */
    public Builder setEVENTTYPE(CharSequence value) {
      validate(fields()[4], value);
      this.EVENT_TYPE = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    

    /** Checks whether the 'EVENT_TYPE' field has been set */
    public boolean hasEVENTTYPE() {
      return fieldSetFlags()[4];
    }
    

    /** Clears the value of the 'EVENT_TYPE' field */
    public Builder clearEVENTTYPE() {
      EVENT_TYPE = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'PLATFORM' field */
    public CharSequence getPLATFORM() {
      return PLATFORM;
    }
    

    /** Sets the value of the 'PLATFORM' field */
    public Builder setPLATFORM(CharSequence value) {
      validate(fields()[5], value);
      this.PLATFORM = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    

    /** Checks whether the 'PLATFORM' field has been set */
    public boolean hasPLATFORM() {
      return fieldSetFlags()[5];
    }
    

    /** Clears the value of the 'PLATFORM' field */
    public Builder clearPLATFORM() {
      PLATFORM = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'OS_VERSION' field */
    public CharSequence getOSVERSION() {
      return OS_VERSION;
    }
    

    /** Sets the value of the 'OS_VERSION' field */
    public Builder setOSVERSION(CharSequence value) {
      validate(fields()[6], value);
      this.OS_VERSION = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    

    /** Checks whether the 'OS_VERSION' field has been set */
    public boolean hasOSVERSION() {
      return fieldSetFlags()[6];
    }
    

    /** Clears the value of the 'OS_VERSION' field */
    public Builder clearOSVERSION() {
      OS_VERSION = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'APPLICATION' field */
    public CharSequence getAPPLICATION() {
      return APPLICATION;
    }
    

    /** Sets the value of the 'APPLICATION' field */
    public Builder setAPPLICATION(CharSequence value) {
      validate(fields()[7], value);
      this.APPLICATION = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    

    /** Checks whether the 'APPLICATION' field has been set */
    public boolean hasAPPLICATION() {
      return fieldSetFlags()[7];
    }
    

    /** Clears the value of the 'APPLICATION' field */
    public Builder clearAPPLICATION() {
      APPLICATION = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'BUNDLE_ID' field */
    public CharSequence getBUNDLEID() {
      return BUNDLE_ID;
    }
    

    /** Sets the value of the 'BUNDLE_ID' field */
    public Builder setBUNDLEID(CharSequence value) {
      validate(fields()[8], value);
      this.BUNDLE_ID = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    

    /** Checks whether the 'BUNDLE_ID' field has been set */
    public boolean hasBUNDLEID() {
      return fieldSetFlags()[8];
    }
    

    /** Clears the value of the 'BUNDLE_ID' field */
    public Builder clearBUNDLEID() {
      BUNDLE_ID = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'KV_ID' field */
    public CharSequence getKVID() {
      return KV_ID;
    }
    

    /** Sets the value of the 'KV_ID' field */
    public Builder setKVID(CharSequence value) {
      validate(fields()[9], value);
      this.KV_ID = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    

    /** Checks whether the 'KV_ID' field has been set */
    public boolean hasKVID() {
      return fieldSetFlags()[9];
    }
    

    /** Clears the value of the 'KV_ID' field */
    public Builder clearKVID() {
      KV_ID = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'SERVER_ERROR' field */
    public CharSequence getSERVERERROR() {
      return SERVER_ERROR;
    }
    

    /** Sets the value of the 'SERVER_ERROR' field */
    public Builder setSERVERERROR(CharSequence value) {
      validate(fields()[10], value);
      this.SERVER_ERROR = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    

    /** Checks whether the 'SERVER_ERROR' field has been set */
    public boolean hasSERVERERROR() {
      return fieldSetFlags()[10];
    }
    

    /** Clears the value of the 'SERVER_ERROR' field */
    public Builder clearSERVERERROR() {
      SERVER_ERROR = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'SERVICE_TYPE' field */
    public CharSequence getSERVICETYPE() {
      return SERVICE_TYPE;
    }
    

    /** Sets the value of the 'SERVICE_TYPE' field */
    public Builder setSERVICETYPE(CharSequence value) {
      validate(fields()[11], value);
      this.SERVICE_TYPE = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    

    /** Checks whether the 'SERVICE_TYPE' field has been set */
    public boolean hasSERVICETYPE() {
      return fieldSetFlags()[11];
    }
    

    /** Clears the value of the 'SERVICE_TYPE' field */
    public Builder clearSERVICETYPE() {
      SERVICE_TYPE = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'EVENT_DATE_1' field */
    public CharSequence getEVENTDATE1() {
      return EVENT_DATE_1;
    }
    

    /** Sets the value of the 'EVENT_DATE_1' field */
    public Builder setEVENTDATE1(CharSequence value) {
      validate(fields()[12], value);
      this.EVENT_DATE_1 = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    

    /** Checks whether the 'EVENT_DATE_1' field has been set */
    public boolean hasEVENTDATE1() {
      return fieldSetFlags()[12];
    }
    

    /** Clears the value of the 'EVENT_DATE_1' field */
    public Builder clearEVENTDATE1() {
      EVENT_DATE_1 = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'EVENT_DATE_2' field */
    public CharSequence getEVENTDATE2() {
      return EVENT_DATE_2;
    }
    

    /** Sets the value of the 'EVENT_DATE_2' field */
    public Builder setEVENTDATE2(CharSequence value) {
      validate(fields()[13], value);
      this.EVENT_DATE_2 = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    

    /** Checks whether the 'EVENT_DATE_2' field has been set */
    public boolean hasEVENTDATE2() {
      return fieldSetFlags()[13];
    }
    

    /** Clears the value of the 'EVENT_DATE_2' field */
    public Builder clearEVENTDATE2() {
      EVENT_DATE_2 = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'EVENT_TIME_EPOCH' field */
    public Long getEVENTTIMEEPOCH() {
      return EVENT_TIME_EPOCH;
    }
    

    /** Sets the value of the 'EVENT_TIME_EPOCH' field */
    public Builder setEVENTTIMEEPOCH(Long value) {
      validate(fields()[14], value);
      this.EVENT_TIME_EPOCH = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    

    /** Checks whether the 'EVENT_TIME_EPOCH' field has been set */
    public boolean hasEVENTTIMEEPOCH() {
      return fieldSetFlags()[14];
    }
    

    /** Clears the value of the 'EVENT_TIME_EPOCH' field */
    public Builder clearEVENTTIMEEPOCH() {
      EVENT_TIME_EPOCH = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    public Avro_aggrDaily_KVSDlyAggr0 build() {
      try {
        Avro_aggrDaily_KVSDlyAggr0 record = new Avro_aggrDaily_KVSDlyAggr0();
        record.LATEST_USED_STORAGE_SIZE_DLY = fieldSetFlags()[0] ? this.LATEST_USED_STORAGE_SIZE_DLY : (Long) defaultValue(fields()[0]);
        record.AGGR_COUNT_DLY = fieldSetFlags()[1] ? this.AGGR_COUNT_DLY : (Long) defaultValue(fields()[1]);
        record.PRS_ID = fieldSetFlags()[2] ? this.PRS_ID : (Long) defaultValue(fields()[2]);
        record.UD_ID = fieldSetFlags()[3] ? this.UD_ID : (CharSequence) defaultValue(fields()[3]);
        record.EVENT_TYPE = fieldSetFlags()[4] ? this.EVENT_TYPE : (CharSequence) defaultValue(fields()[4]);
        record.PLATFORM = fieldSetFlags()[5] ? this.PLATFORM : (CharSequence) defaultValue(fields()[5]);
        record.OS_VERSION = fieldSetFlags()[6] ? this.OS_VERSION : (CharSequence) defaultValue(fields()[6]);
        record.APPLICATION = fieldSetFlags()[7] ? this.APPLICATION : (CharSequence) defaultValue(fields()[7]);
        record.BUNDLE_ID = fieldSetFlags()[8] ? this.BUNDLE_ID : (CharSequence) defaultValue(fields()[8]);
        record.KV_ID = fieldSetFlags()[9] ? this.KV_ID : (CharSequence) defaultValue(fields()[9]);
        record.SERVER_ERROR = fieldSetFlags()[10] ? this.SERVER_ERROR : (CharSequence) defaultValue(fields()[10]);
        record.SERVICE_TYPE = fieldSetFlags()[11] ? this.SERVICE_TYPE : (CharSequence) defaultValue(fields()[11]);
        record.EVENT_DATE_1 = fieldSetFlags()[12] ? this.EVENT_DATE_1 : (CharSequence) defaultValue(fields()[12]);
        record.EVENT_DATE_2 = fieldSetFlags()[13] ? this.EVENT_DATE_2 : (CharSequence) defaultValue(fields()[13]);
        record.EVENT_TIME_EPOCH = fieldSetFlags()[14] ? this.EVENT_TIME_EPOCH : (Long) defaultValue(fields()[14]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
    
    
  }
}

